/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
        behaviors {
                hm: homerow_mod{
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    quick-tap-ms = <300>;
                    require-prior-idle-ms = <150>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
                td_esc_caps: tap_dance_esc_caps {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_ESC_CAPS";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp ESC>, <&kp CAPS>;
                };
                td_left_home: tap_dance_left_home {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_LEFT_HOME";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LEFT>, <&kp HOME>;
                };
                td_dn_pgdn: tap_dance_down_pagedown {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_DOWN_PAGEDOWN";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp DOWN>, <&kp PG_DN>;
                };
                td_up_pgup: tap_dance_up_pageup {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_UP_PAGEUP";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp UP>, <&kp PG_UP>;
                };
                td_right_end: tap_dance_right_end {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_RIGHT_END";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp RIGHT>, <&kp END>;
                };
                mm_bspc_del: modmorph_backspace_delete {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORP_BAKSPACE_DELETE";
                    #binding-cells = <0>;
                    bindings = <&kp BSPC>, <&kp DEL>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                                                bindings = <
                           &kp TAB        &kp Q      &kp W      &kp E        &kp R       &kp T                                      &kp Y   &kp U        &kp I        &kp O      &kp P         &mm_bspc_del
                           &td_esc_caps &hm LGUI A &hm LALT S &hm LSHIFT D &hm LCTRL F &kp G                                      &kp H   &hm LCTRL J  &hm LSHIFT K &hm LALT L &hm LGUI SEMI &kp SQT
                           &kp LSHFT      &kp Z      &kp X      &kp C        &kp V       &kp B                                      &kp N   &kp M        &kp COMMA    &kp DOT    &kp FSLH      &kp LCTRL
                                                                             &kp LGUI    &kp SPACE &mo 1                      &mo 2 &kp RET &kp LALT
                                                >;
                };
                number_layer {
                                                bindings = <
                           &trans       &kp N1       &kp N2       &kp N3       &kp N4       &kp N5                                   &kp N6        &kp N7      &kp N8      &kp N9        &kp N0 &trans
                           &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                             &td_left_home &td_dn_pgdn &td_up_pgup &td_right_end &trans &trans
                           &out OUT_TOG &out OUT_BLE &trans       &trans       &trans       &trans                                   &trans        &trans      &trans      &trans        &trans &trans
                                                                               &trans       &trans       &trans               &mo 3  &trans        &trans
                                                >;
                };

                symbol_layer {
                                                bindings = <
                           &trans    &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                        &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
                           &trans    &trans   &trans &trans   &trans   &trans                           &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
                           &trans    &trans   &trans &trans   &trans   &trans                           &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                                                              &trans   &trans   &mo 3         &trans    &trans    &trans
                                                >;
                };
                numpad_layer {
                                                bindings = <
                           &trans    &kp F7   &kp F8 &kp F9   &kp F10  &trans                            &trans    &kp N7    &kp N8          &kp N9   &kp N0          &trans
                           &trans    &kp F4   &kp F5 &kp F6   &kp F11  &trans                            &kp PLUS  &kp N4    &kp N5          &kp N6   &kp KP_MULTIPLY &trans
                           &trans    &kp F1   &kp F2 &kp F3   &kp F12  &trans                            &kp MINUS &kp N1    &kp N3          &kp N3   &kp FSLH        &trans
                                                              &trans   &trans   &trans         &trans    &trans    &trans
                                                >;
                };
        };
};
