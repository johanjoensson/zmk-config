/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


/ {
        behaviors {
                hm: homerow_mod{
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    quick-tap-ms = <150>;
                    require-prior-idle-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
                td_esc_caps: tap_dance_esc_caps {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_ESC_CAPS";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp ESC>, <&kp CAPS>;
                };
                td_left_home: tap_dance_left_home {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_LEFT_HOME";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LEFT>, <&kp HOME>;
                };
                td_down_pgdn: tap_dance_down_pagedown {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_DOWN_PAGEDOWN";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp DOWN>, <&kp PG_DN>;
                };
                td_up_pgup: tap_dance_up_pageup {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_UP_PAGEUP";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp UP>, <&kp PG_UP>;
                };
                td_right_end: tap_dance_right_end {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_RIGHT_END";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp RIGHT>, <&kp END>;
                };
                mm_bspc_del: backspace_delete {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORPH_BACKSPACE_DELETE";
                    #binding-cells = <0>;
                    bindings = <&kp BACKSPACE>, <&kp DELETE>;
                    mods = <(MOD_LSFT|MOD_RSFT)>;
                };
                mm_swe_a_circ: modmorph_swe_a_circ {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORPH_SWE_A_CIRC";
                    #binding-cells = <0>;
                    bindings = <&swe_a_circ>, <&swe_shift_a_circ>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
                mm_swe_a_dia: modmorph_swe_a_dia {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORPH_SWE_A_DIA";
                    #binding-cells = <0>;
                    bindings = <&swe_a_dia>, <&swe_shift_a_dia>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
                mm_swe_o_dia: modmorph_swe_o_dia {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORP_O_DIA";
                    #binding-cells = <0>;
                    bindings = <&swe_o_dia>, <&swe_shift_o_dia>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
        };
        macros {
                swe_a_circ: swe_a_circ {
                    label = "ZM_swe_a_circ";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp E &kp KP_N5 &kp SPACE>
                            ;
                };
                swe_shift_a_circ: swe_shift_a_circ {
                    label = "ZM_swe_shift_a_circ";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp C &kp KP_N5 &kp SPACE>
                            ;
                };
                swe_a_dia: swe_a_dia {
                    label = "ZM_swe_a_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp E &kp KP_N4 &kp SPACE>
                            ;
                };
                swe_shift_a_dia: swe_shift_a_dia {
                    label = "ZM_swe_shift_a_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp C &kp KP_N4 &kp SPACE>
                            ;
                };
                swe_o_dia: swe_o_dia {
                    label = "ZM_swe_o_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp F &kp KP_N6 &kp SPACE>
                            ;
                };
                swe_shift_o_dia: swe_shift_o_dia {
                    label = "ZM_swe_shift_o_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp D &kp KP_N6 &kp SPACE>
                            ;
                };
        };
        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <30>;
                        key-positions = <14 15>;
                        bindings = <&td_esc_caps>;
                };
                combo_tab {
                        timeout-ms = <30>;
                        key-positions = <2 3>;
                        bindings = <&kp TAB>;
                };
                combo_shift_tab {
                        timeout-ms = <30>;
                        key-positions = <3 4>;
                        bindings = <&kp LS(TAB)>;
                };
                combo_backspace {
                        timeout-ms = <30>;
                        key-positions = <7 8>;
                        bindings = <&mm_bspc_del>;
                };
                combo_enter {
                        timeout-ms = <30>;
                        key-positions = <19 20>;
                        bindings = <&kp RET>;
                };
                combo_swe_a_circ {
                        timeout-ms = <30>;
                        key-positions = <8 9>;
                        bindings = <&mm_swe_a_circ>;
                };
                combo_swe_a_dia {
                        timeout-ms = <30>;
                        key-positions = <20 21>;
                        bindings = <&mm_swe_a_dia>;
                };
                combo_swe_o_dia {
                        timeout-ms = <30>;
                        key-positions = <32 33>;
                        bindings = <&mm_swe_o_dia>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                                                bindings = <
                           &kp TAB      &kp Q      &kp W      &kp E &kp R       &kp T                                  &kp Y   &kp U        &kp I      &kp O      &kp P         &mm_bspc_del
                           &td_esc_caps &hm LGUI A &hm LALT S &kp D &hm LCTRL F &kp G                                  &kp H   &hm LCTRL J  &kp K      &hm LALT L &hm LGUI SEMI &kp SQT
                           &kp LSHFT    &kp Z      &kp X      &kp C &kp V       &kp B                                  &kp N   &kp M        &kp COMMA  &kp DOT    &kp FSLH      &kp DELETE
                                                                    &kp LGUI    &hm LSHFT SPACE &mo 2      &mo 1 &hm LSHFT RET &kp LALT
                                                >;
                };

                symbol_layer {
                                                bindings = <
                           &trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                     &kp CARET &kp AMPS  &kp LBKT &kp RBKT &kp KP_MULTIPLY &trans
                           &trans &trans   &trans &trans   &trans   &kp BSLH                      &kp MINUS &kp EQUAL &kp LPAR &kp RPAR &kp SQT         &kp GRAVE
                           &trans &trans   &trans &trans   &trans   &kp PIPE                      &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp TILDE       &kp TILDE
                                                           &trans   &trans    &mo 3        &trans &trans    &trans
                                                >;
                };

                numpad_layer {
                                                bindings = <
                           &trans &kp F7 &kp F8 &kp F9 &kp F10  &trans                  &kp PLUS  &kp N7  &kp N8 &kp N9 &kp KP_MULTIPLY &trans
                           &trans &kp F4 &kp F5 &kp F6 &kp F11  &trans                  &kp MINUS &kp N4  &kp N5 &kp N6 &kp FSLH        &trans
                           &trans &kp F1 &kp F2 &kp F3 &kp F12  &trans                  &trans    &kp N1  &kp N2 &kp N3 &trans          &trans
                                                       &trans   &trans &trans     &mo 3 &kp N0    &trans
                                                >;
                };

                nav_layer {
                                                bindings = <
                           &trans       &trans       &trans       &trans       &trans       &trans                          &trans        &trans        &trans      &trans        &trans &trans
                           &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &td_left_home &td_down_pgdn &td_up_pgup &td_right_end &trans &trans
                           &out OUT_TOG &out OUT_BLE &trans       &trans       &trans       &trans                          &trans        &trans        &trans      &trans        &trans &trans
                                                                               &trans       &trans       &trans      &trans &trans        &trans
                                                >;
                };
        };
};
