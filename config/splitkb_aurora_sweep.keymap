/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>


#define QWE 0
#define CDH 1
#define SYM 2
#define NUM 3
#define NAV 4
#define MSE 5

/ {
        behaviors {
                mtg: momentary_toggle {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <200>;
                    bindings = <&mo>, <&tog>;
                };
                hm: homerow_mod{
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    quick-tap-ms = <150>;
                    require-prior-idle-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
                td_esc_caps: tap_dance_esc_caps {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_ESC_CAPS";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp ESC>, <&kp CAPS>;
                };
                td_left_home: tap_dance_left_home {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_LEFT_HOME";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp LEFT>, <&kp HOME>;
                };
                td_down_pgdn: tap_dance_down_pagedown {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_DOWN_PAGEDOWN";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp DOWN>, <&kp PG_DN>;
                };
                td_up_pgup: tap_dance_up_pageup {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_UP_PAGEUP";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp UP>, <&kp PG_UP>;
                };
                td_right_end: tap_dance_right_end {
                    compatible = "zmk,behavior-tap-dance";
                    label = "TAP_DANCE_RIGHT_END";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp RIGHT>, <&kp END>;
                };
                mm_bspc_del: backspace_delete {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORPH_BACKSPACE_DELETE";
                    #binding-cells = <0>;
                    bindings = <&kp BACKSPACE>, <&kp DELETE>;
                    mods = <(MOD_LSFT|MOD_RSFT)>;
                };
                mm_swe_a_circ: modmorph_swe_a_circ {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORPH_SWE_A_CIRC";
                    #binding-cells = <0>;
                    bindings = <&swe_a_circ>, <&swe_shift_a_circ>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
                mm_swe_a_dia: modmorph_swe_a_dia {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORPH_SWE_A_DIA";
                    #binding-cells = <0>;
                    bindings = <&swe_a_dia>, <&swe_shift_a_dia>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
                mm_swe_o_dia: modmorph_swe_o_dia {
                    compatible = "zmk,behavior-mod-morph";
                    label = "MODMORP_O_DIA";
                    #binding-cells = <0>;
                    bindings = <&swe_o_dia>, <&swe_shift_o_dia>;
                    mods = <(MOD_LSFT | MOD_RSFT)>;
                };
        };
        macros {
                swe_a_circ: swe_a_circ {
                    label = "ZM_swe_a_circ";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp E &kp KP_N5 &kp SPACE>
                            ;
                };
                swe_shift_a_circ: swe_shift_a_circ {
                    label = "ZM_swe_shift_a_circ";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp C &kp KP_N5 &kp SPACE>
                            ;
                };
                swe_a_dia: swe_a_dia {
                    label = "ZM_swe_a_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp E &kp KP_N4 &kp SPACE>
                            ;
                };
                swe_shift_a_dia: swe_shift_a_dia {
                    label = "ZM_swe_shift_a_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp C &kp KP_N4 &kp SPACE>
                            ;
                };
                swe_o_dia: swe_o_dia {
                    label = "ZM_swe_o_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp F &kp KP_N6 &kp SPACE>
                            ;
                };
                swe_shift_o_dia: swe_shift_o_dia {
                    label = "ZM_swe_shift_o_dia";
                    wait-ms = <5>;
                    tap-ms = <5>;
                    compatible = "zmk,behavior-macro";
                    #binding-cells = <0>;
                    bindings
                            = <&macro_tap &kp LC(LS(U))>
                            , <&macro_tap &kp D &kp KP_N6 &kp SPACE>
                            ;
                };
        };
        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <30>;
                        key-positions = <11 12>;
                        bindings = <&td_esc_caps>;
                };
                combo_tab {
                        timeout-ms = <30>;
                        key-positions = <1 2>;
                        bindings = <&kp TAB>;
                };
                combo_shift_tab {
                        timeout-ms = <30>;
                        key-positions = <2 3>;
                        bindings = <&kp LS(TAB)>;
                };
                combo_backspace {
                        timeout-ms = <30>;
                        key-positions = <6 7>;
                        bindings = <&mm_bspc_del>;
                };
                combo_enter {
                        timeout-ms = <30>;
                        key-positions = <16 17>;
                        bindings = <&kp RET>;
                };
                combo_swe_a_circ {
                        timeout-ms = <30>;
                        key-positions = <7 8>;
                        bindings = <&mm_swe_a_circ>;
                };
                combo_swe_a_dia {
                        timeout-ms = <30>;
                        key-positions = <17 18>;
                        bindings = <&mm_swe_a_dia>;
                };
                combo_swe_o_dia {
                        timeout-ms = <30>;
                        key-positions = <18 19>;
                        bindings = <&mm_swe_o_dia>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                                                bindings = <
                           &kp Q      &kp W      &kp E &kp R       &kp T                                     &kp Y   &kp U        &kp I      &kp O      &kp P        
                           &hm LGUI A &hm LALT S &kp D &hm LCTRL F &kp G                                     &kp H   &hm LCTRL J  &kp K      &hm LALT L &hm LGUI SEMI
                           &kp Z      &kp X      &kp C &kp V       &kp B                                     &kp N   &kp M        &kp COMMA  &kp DOT    &kp FSLH     
                                                                   &hm LSHFT SPACE &mtg NUM NUM  &mtg SYM SYM  &hm LSHFT RET
                                                >;
                };

                colemak_dh_layer {
                                                bindings = <
                           &kp Q      &kp W      &kp F &kp P       &kp B                                     &kp J   &kp L        &kp U      &kp Y      &kp SEMI        
                           &hm LGUI A &hm LALT R &kp S &hm LCTRL T &kp G                                     &kp M   &hm LCTRL N  &kp E      &hm LALT I &hm LGUI O
                           &kp Z      &kp X      &kp C &kp D       &kp V                                     &kp K   &kp H        &kp COMMA  &kp DOT    &kp FSLH     
                                                                   &hm LSHFT SPACE &mtg NUM NUM  &mtg SYM SYM  &hm LSHFT RET
                                                >;
                };

                symbol_layer {
                                                bindings = <
                           &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                     &kp CARET &kp AMPS  &kp LBRC &kp RBRC &kp KP_MULTIPLY
                           &none    &none  &none    &none    &kp BSLH                      &kp MINUS &kp EQUAL &kp LPAR &kp RPAR &kp SQT        
                           &none    &none  &none    &none    &kp PIPE                      &kp UNDER &kp PLUS  &kp LBKT &kp RBKT &kp TILDE      
                                                             &trans     &mo NAV  &tog SYM   &trans
                                                >;
                };

                numpad_layer {
                                                bindings = <
                           &tog CDH     &none        &none        &none        &none                           &kp KP_MULTIPLY  &kp N7  &kp N8 &kp N9 &kp MINUS
                           &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &kp FSLH         &kp N4  &kp N5 &kp N6 &kp PLUS 
                           &out OUT_TOG &bt BT_CLR   &bt BT_PRV   &bt BT_NXT   &bt BT_CLR_ALL                  &kp COMMA        &kp N1  &kp N2 &kp N3 &kp DOT
                                                                               &trans       &tog NUM  &mo NAV  &kp N0
                                                >;
                };

                nav_layer {
                                               bindings = <
                           &kp C_VOL_UP  &kp F7 &kp F8 &kp F9 &kp F10                    &caps_word    &kp K_COPY    &kp K_PASTE &none         &none
                           &kp C_VOL_DN  &kp F4 &kp F5 &kp F6 &kp F11                    &td_left_home &td_down_pgdn &td_up_pgup &td_right_end &none
                           &kp C_MUTE    &kp F1 &kp F2 &kp F3 &kp F12                    &kp C_PREV    &kp C_PLAY    &kp C_NEXT  &none         &none
                                                       &trans &tog NAV &tog NAV &trans
                                                >;
                };
                mouse_layer {
                                               bindings = <
                           &none  &none    &none &none &none                    &none    &none &none &none &none
                           &none  &none    &none &none &none                    &none    &none &none &none &none
                           &none  &mkp MB2 &none &none &none                    &mkp MB1 &none &none &none &none
                                                       &trans &tog MSE &tog MSE &trans
                                                >;
                };
        };
};
